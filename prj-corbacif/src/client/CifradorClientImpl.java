package client;
/*
 * The client implementation is generated by the ORB Studio.
 */
import java.io.FileReader;
import java.io.IOException;
import java.io.LineNumberReader;
import java.util.Properties;

import org.omg.CORBA.ORBPackage.InvalidName;
import org.omg.CosNaming.NamingContextExt;
import org.omg.CosNaming.NamingContextExtHelper;
import org.omg.CosNaming.NamingContextPackage.CannotProceed;
import org.omg.CosNaming.NamingContextPackage.NotFound;

class CifradorClientImpl {
	private corba.Cifrador target = null;
	private org.omg.CORBA.ORB orb = null;

	/**
	 * Constructor for CifradorClientImpl
	 * 
	 * @throws IOException
	 */
	public CifradorClientImpl() throws IOException {
		initORB(null);
	}

	/**
	 * Constructor for CifradorClientImpl
	 * 
	 * @throws IOException
	 * @see java.lang.Object#Object()
	 */
	public CifradorClientImpl(String[] args) throws IOException {
		initORB(args);
	}

	/**
	 * Initialize ORB.
	 *  
	 * @param args
	 * @throws IOException
	 */
	public void initORB(String[] args) throws IOException {

		Properties props = System.getProperties();
		props.setProperty("org.omg.CORBA.ORBClass", "com.sun.corba.se.internal.POA.POAORB");
		props.setProperty("org.omg.CORBA.ORBSingletonClass", "com.sun.corba.se.internal.corba.ORBSingleton");

		// Initialize the ORB
		orb = org.omg.CORBA.ORB.init((String[])args, props);

		// ---- Uncomment below to enable Naming Service access. ----
		 org.omg.CORBA.Object ncobj = null;
		try {
			ncobj = orb.resolve_initial_references("NameService");
		} catch (InvalidName e) {
			e.printStackTrace();
		}
		 NamingContextExt nc = NamingContextExtHelper.narrow(ncobj);
		 org.omg.CORBA.Object obj = null;
		try {
			obj = nc.resolve_str("MiCifrador");
		} catch (NotFound e) {
			e.printStackTrace();
		} catch (CannotProceed e) {
			e.printStackTrace();
		} catch (org.omg.CosNaming.NamingContextPackage.InvalidName e) {
			e.printStackTrace();
		}

		//LineNumberReader input = new LineNumberReader(new FileReader("server.ior"));
		//String ior = input.readLine();
		//org.omg.CORBA.Object obj = orb.string_to_object(ior);

		target = corba.CifradorHelper.narrow(obj);		
	}

	/**
	 * Obtain ORB Interface.
	 * 
	 * @return
	 */
	public corba.Cifrador getORBInterface() {
		return target;
	}

	/**
	 * Shutdown ORB.
	 */
	public void shutdown() {
		orb.shutdown(true);
	}

	/**
	 * Test driver for CifradorClientImpl.
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		try {
			CifradorClientImpl test = new CifradorClientImpl();  // Might need to pass args

			String msgCifrado = test.getORBInterface().cifra("ABCDEFGHIJK", "1234");
			String msg = test.getORBInterface().cifra(msgCifrado, "1234");
			System.out.println("Mensaje cifrado: "+msgCifrado+"\nMensaje descrifrado: "+msg);

			test.shutdown();
		}
		catch(IOException ex) {
			ex.printStackTrace();
		}
	}
}
